Урок 1
1. Настроить package.json
2. Настроить webpack.config
3. Сделать сборку простейшего React-кода при помощи webpack
4. Выдать html файл, в который подключается сборка (на уроке использовался webpack-dev-server)

Урок 2
1. Создать в папке components два компонента: MessageField и Message
2. Сообщения должны отрисовываться внутри MessageField массивом (map)
3. Реализовать отправку сообщений
4. На каждое отправленное сообщение должен отвечать "робот" (используйте componentDidUpdate)

Урок 3
1. Реализовать хранение сообщений с указанием автора
2. Добавить возможность ввода текста сообщения
3. Создать компонент Layout и компоненты ChatList, Header, MessageField, которые будут внутри Layout
4. Подключить Material-UI и сделать с его помощью вёрстку сообщений, поля ввода, кнопки отправки и списка чатов (сам список не должен пока работать)

Урок 4
1. Подключить BrowserRouter (из react-router-dom)
2. Создать верхний компонент App со Switch и Rout-ами
3. Сделать страницу профиля по урлу /profile/
4. Разбить приложение на чаты  спомощью урлов (/chat/<chat_id>/)
5. Реализовать хранение сообщений в словаре с id в качестве ключа
6. Реализовать хранение чатов в словаре с id в качестве ключа
7. Выводить в компоненте Header количество сообщений в текущем чате (который открыт). Для этого нужно перенести часть state и функций из MessageField в Layout

Урок 5
1. Подключить Redux
2. Перенести в Redux собщения
3. Перенести в Redux чаты

Урок 6
1. Создать messageMiddleware и перенести туда логику ответа от робота.
2.* Сделать с помощью middleware мигание чата, в который пришло сообщение от робота.
3. Подключить Router к Redux и перевести переходы между чатами с <Link> на push().
4. Подключить redux-persist и сохранять с его помощью чаты и сообщения.
5.* Реализовать возможность добавления новых чатов